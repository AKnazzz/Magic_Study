package org.tinkoff.task_2;

import java.util.Scanner;

/**
 * Хетаг подозревает, что заразился неизвестным вирусом.
 * Прямо сейчас он сидит на лекции в университете и активно пытается выздороветь. Нам же известна следующая информация:
 * 1. Вирус очень заразный. Спустя минуту после заражения каждый носитель передает вирус всем людям, сидящим вокруг него и не имеющим иммунитета.
 * 2. Вирус совершенно безобидный. Человек болеет этим вирусом бессимптомно ровно одну минуту, после чего приобретает пожизненный иммунитет.
 * Аудиторию, в которой проходит лекция, можно представить в виде бесконечной клетчатой сетки, в каждой ячейке которой сидит человек.
 * Изначально Хетаг — единственный носитель вируса во всей аудитории.
 * Соответственно, каждую минуту зараженные люди передают вирус своим соседям (клетки считаются соседними, если соприкасаются по стороне;
 * у каждой клетки ровно 4 соседа), после чего моментально выздоравливают и больше не болеют.
 *
 * Определите количество зараженных на n-й минуте лекции.
 *
 * Формат входных данных
 * Первая и единственная строка содержит целое число n (1 <= n <= 100000000) — номер минуты, идущей от начала лекции.
 * Для примера, n = 1 означает «первую» минуту, то есть отрезок времени длиной в минуту, начинающийся от самого начала лекции.
 *
 * Формат выходных данных
 * Выведите единственное число — количество зараженных на n-й минуте лекции.
 *
 */

/*

Для решения задачи о распространении вируса в клетчатой сетке можно использовать математический подход, основанный на анализе структуры распространения инфекции.

Анализ задачи

В каждой минуте вирус распространяется на соседние клетки (соседи по стороне).
Если Хетаг был единственным носителем вируса в начале, то:

- На 1-й минуте заражается 1 человек (Хетаг).
- На 2-й минуте к Хетагу присоединяются его 4 соседа, итого 5 зараженных.
- На 3-й минуте к этим 4 соседям присоединяются их соседи, и мы получаем 12 новых зараженных. Всего будет 17 зараженных.
- На 4-й минуте к 12 новым зараженным добавляются еще 20, и всего будет 37 зараженных.

В общем случае, можно заметить, что количество зараженных людей на n-й минуте можно выразить формулой:

[ {Количество зараженных} = 1 + 4 * (1 + 2 + ... + (n - 1)) = 1 + 4 * ((n-1) * n)2 = 1 + 2n(n-1)]

Таким образом, для n-й минуты количество зараженных можно выразить как:
[ {Количество зараженных} = 2n^2 - 2n + 1]

 */

public class VirusSpread {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Читаем значение n
        int n = scanner.nextInt();

        // Вычисляем количество зараженных на n-й минуте
        long infectedCount = 2L * n * n - 2L * n + 1;

        // Выводим результат
        System.out.println(infectedCount);

        scanner.close();
    }
}

//### Объяснение кода:
//1. Мы используем Scanner для чтения входного значения \\( n \\).
//2. Вычисляем количество зараженных на n-й минуте с помощью формулы \\( 2n^2 - 2n + 1 \\). Используем тип long, чтобы избежать переполнения для больших значений \\( n \\) (до \\( 100000000 \\)).
//3. Выводим результат на экран.
//
//### Примечание:
//Этот алгоритм работает за \\( O(1) \\), что делает его очень эффективным даже для максимальных значений \\( n \\).