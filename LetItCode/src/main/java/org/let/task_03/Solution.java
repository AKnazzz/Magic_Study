package org.let.task_03;

public class Solution {
    public TreeNode invertTree(TreeNode root) {
        // Проверка на случай, если дерево пустое, то есть корневой узел равен null.
        // Если это так, то метод просто возвращает null.
        if (root == null) {
            return root;
        }
        // Вызов рекурсивной функции для левого поддерева.
        // Эта строка кода рекурсивно вызывает метод invertTree() для левого поддерева, чтобы инвертировать его.
        invertTree(root.left);
        // Вызов рекурсивной функции для правого поддерева.
        // Эта строка кода рекурсивно вызывает метод invertTree() для правого поддерева, чтобы инвертировать его.
        invertTree(root.right);
        // Создание временной переменной curr, которой присваивается значение левого потомка корневого узла.
        TreeNode curr = root.left;
        // Переназначение левого потомка корневого узла на правый потомок.
        root.left = root.right;
        // Переназначение правого потомка корневого узла на временную переменную curr,
        // которая содержала значение левого потомка корневого узла до переназначения левого потомка.
        root.right = curr;
        return root;
    }
}
