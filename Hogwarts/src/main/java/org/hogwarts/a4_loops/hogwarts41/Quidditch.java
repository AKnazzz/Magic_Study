package org.hogwarts.a4_loops.hogwarts41;

import java.util.Random;

/**
 * Внутри метода нужно:
 * 1.  Запустить цикл for, который будет совершать три итерации. Для этого первично инициализируем счетчик единицей,
 * устанавливаем условие прекращения и проставляем шаг: i++.
 * 2.   Теперь работаем в теле цикла - внутри фигурных скобок: первым делом задаем общее действие для всех итераций.
 * Нужно вывести на экран фразу “Запущен мяч под названием “. Используйте для этого команду System.out.print(//строка).
 * Команда System.out.print в отличие от System.out.println не переводит курсор на следующую строку после выполнения.
 * 3.   Затем в продолжение логики внутри фигурных скобок давайте напишем три условия: если счетчик (i) равен 1,
 * то вывести на экран название самого большого мяча: “Quaffle”. Если счетчик равен двум, вывести на экран название
 * второго мяча: “Bludger”. Если счетчик равен трем, вывести “Golden Snitch”. Здесь уже используем команду System.out.println.
 * Когда мы запустим код, разница станет очевидна!
 * 4.   Теперь, когда логика написана, нам нужно вызвать этот метод. Для этого отправляемся в класс Main и в его методе main пишем следующий код:
 * <p>
 * Quidditch quidditch = new Quidditch();
 * quidditch.getBalls();
 * <p>
 * Теперь можно запустить метод main и посмотреть на результат! Кстати, если сейчас запускается слишком много кода,
 * можно закомментировать лишние строчки с помощью символов // перед строкой.
 * <p>
 * 1.  В классе Quidditch создать новый метод playGame().
 * 2.  Внутри метода запускаем бесконечный цикл с помощью while.
 * 3.  Чтобы воссоздать ситуацию с пойманным мячом, будем генерировать рандомные числа в диапазоне от 0 до 100 до тех пор,
 * пока не выпадет какое-то, которые мы задумаем. Для этого внутри цикла создайте переменную int control. Обратите внимание,
 * что при каждой итерации цикла будет генерироваться новое число. Для создания числа используйте класс Random.
 * 4.  Теперь нужно написать условие, при котором Снитч будет считаться пойманным. Для этого загадайте любое число в диапазоне от 0 до 100.
 * Напишите условие if, в котором проверьте, равно ли control вашему загаданному числу. Если равно, выводим
 * на экран сообщение о том, что Снитч пойман, и затем нужно остановить выполнение всего цикла. То есть мы должны заставить программу перестать выполнять цикл совсем.
 * 5.  По классике, чтобы запустить программу, идем в Main и в методе main пишем строчку:quidditch.playGame(); И запускаем.
 * <p>
 * quidditch.playGame();
 * И запускаем.
 * <p>
 * 6. Сейчас программа прекращается моментально, мы сразу же видим сообщение о том, что снитч был пойман и поэтому нам непонятно,
 * сколько вообще длилась игра. Давайте снова вернемся в класс Quidditch и в методе playGame добавим вывод на экран какого-нибудь символа в том случае, если control не равен загаданному числу. Например, можно написать System.*out*.println("!");
 * 7. Пробуем запустить снова, желательно несколько раз, чтобы убедиться, что программа длится разное время каждый раз.
 */
public class Quidditch {
    public void getBalls() {
        for (int i = 1; i < 4; i++) {
            System.out.print("Запущен мяч под названием ");
            if (i == 1) {
                System.out.println("Quaffle");
            } else if (i == 2) {
                System.out.println("Bludger");
            } else {
                System.out.println("Golden Snitch");
            }
        }
    }

    public void playGame() {
        Random random = new Random();
        while (true) {
            int control = random.nextInt(0, 101);
            System.out.println(control);
            if (control == 77) {
                System.out.println("Ура! Выпало: " + control + " !!! Снитч пойман! игра закончена!");
                break;
            }
        }

    }
}
