Наталья, привет! Меня зовут Андрей, я твой код-ревьюер. Поздравляю с написанием работы!
Работа хорошая, но есть несколько замечаний и рекомендаций по улучшению кода:
я рассмотрел два приложенных файла - каждый из них решает часть поставленной задачи:
в первом файле выводится строчка с информацией об имени и возрасте друга,
во втором считывается возраст друга и выводится в консоль.
Попробуй объединить эти два варианта - считать с командной строки и возраст, и имя друга.
А после вывести через System.out.println () согласно форме из задания.
Если возникнут трудности попробуй еще раз посмотреть материалы из урока.
У тебя всё получится, жду следующую итерацию.


Наталья, привет! Меня зовут Андрей, я посмотрел твою домашнюю работу. Понимание кода может занять время и требует практики.
Я согласен с тобой, что в видео не всегда удается охватить все моменты.
StringBuilder - это класс в Java, который используется для создания и изменения строк.
Он позволяет создавать строку, добавлять к ней символы и удалять их. StringBuilder эффективнее работает с памятью,
чем обычные строки (String), поэтому он часто используется в Java для работы со строками. В данном случае,
строка result создается с помощью StringBuilder, чтобы в нее можно было добавлять символы в цикле.
Тут можно посмотреть подробнее (https://javarush.com/groups/posts/2351-znakomstvo-so-string-stringbuffer-i-stringbuilder-v-java)
Твоё решение первой задачи является корректным и эффективным - код понятно написан и легко читается, ты отлично используешь материалы пройденные на уроке!
Но надо кое-что исправить - на трочках 13 и 19 у тебя лишник фигурные скобки - их надо удалить.
Подумай как можно решить данную задачу с использованием класса StringBuilder (внимательно почитай про методы данного класса).
Также жду твоё решение по второй задаче. Если возникли трудности с понимание условий задачи или у тебя есть какие-то конкретные вопросы по коду,
я могу помочь тебе разобраться в них.
Программирование может быть сложным и иногда требует времени и усилий, чтобы понять его полностью.
Важно продолжать учиться и задавать вопросы, если что-то не понятно. Я готов помочь тебе, так что не стесняйся обращаться за помощью и продолжай практиковаться!



Наталья, отличная работа!
Ваше решение полностью соответствует требованиями и выполняет задание корректно.
Мне нравится, что вы использовали цикл for и условия if / else if / else для решения задачи.
Продолжайте в том же духе! Если у вас возникнут какие-либо вопросы или трудности, не стесняйтесь обращаться за помощью
к команде поддержки - это можно сделать через ТГ чат или с помощью кнопки “задать вопрос” на самой платформе.
Удачи в дальнейшем обучении!

Отличная работа, Наталья! Поздравляю тебя с тем, что ты успешно справилась с написанием домашней работы.
Твой код хорошо структурирован и понятно написан, что делает его легко читаемым и понятным для других разработчиков.
Однако, у меня есть несколько некритичных замечаний, которые могут помочь тебе улучшить свой код.
Во-первых, в классе AuthorizationFilter рекомендуется добавить обработку случая, когда сессия не существует, например,
перенаправление на страницу логина.
Во-вторых, по сущности Transaction - у тебя отличное решение и оно правильно используется, но обычно для сущнотей
под доходы и расходы испльзуют правтику высталения флага (например true = доход, false = расход).
В-терьих в классах периодически указано ServletException, которое не будет выброшено - рекомендую удалить в тех случаях где это явно не требуется.

В целом, твоя работа заслуживает похвалы. Продолжай в том же духе и удачи в дальнейшем изучении Java!


Наталья, привет!
Спасибо за отправку домашней работы. Однако, я заметил, что файл, который вы прислали, пустой (в части выполнения домашней работы).
Возможно, произошла ошибка при отправке или вы перепутали файлы. Если у вас возникли какие-то трудности с выполнением задания,
не стесняйтесь обращаться за помощью к команде поддержки - это моно сделать через ТГ чат или с помощью кнопки “задать вопрос” на самой платформе.
Напомню что в классе ContactDao необходимо было реализовать написанные методы.

Дополнительно советую изучить материалы по теме
https://javarush.com/groups/posts/2172-jdbc-ili-s-chego-vsje-nachinaetsja
или
https://habr.com/ru/articles/326614/
Если возникнут трудности попробуй еще раз посмотреть материалы из урока (см аналогичный класс AccountDao).
У тебя всё получится, жду следующую итерацию.